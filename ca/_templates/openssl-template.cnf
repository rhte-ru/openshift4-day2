# OpenSSL CA configuration file.

#
# https://devcentral.f5.com/s/articles/building-an-openssl-certificate-authority-introduction-and-design-considerations-for-elliptical-curves-27720
#

[ ca ]
#
default_ca = CA_default

[ CA_default ]
# Directory and file locations.
dir_openssl_conf  = $ENV::base/$ENV::CA
certs             = $dir_openssl_conf/certs
crl_dir           = $dir_openssl_conf/crl
new_certs_dir     = $dir_openssl_conf/newcerts
database          = $dir_openssl_conf/index.txt
serial            = $dir_openssl_conf/serial
RANDFILE          = $dir_openssl_conf/private/.rand

# The root key and root certificate.
private_key       = $dir_openssl_conf/private/__CA__.key.pem
certificate       = $dir_openssl_conf/certs/__CA__.crt.pem

# For certificate revocation lists.
crlnumber         = $dir_openssl_conf/crlnumber
crl               = $dir_openssl_conf/crl/__CA__.crl.pem
crl_extensions    = crl_ext
default_crl_days  = 3750

# SHA-1 is deprecated, so use SHA-2 instead.
default_md        = sha384

name_opt          = ca_default
cert_opt          = ca_default
default_days      = 375
preserve          = no
policy            = policy_loose

copy_extensions   = copy

[ policy_strict ]
# The root CA should only sign  certificates that match.
# See the POLICY FORMAT section of man ca.
countryName             = match
stateOrProvinceName     = match
organizationName        = match
organizationalUnitName  = optional
commonName              = supplied
emailAddress            = optional

[ policy_loose ]
# Allow the  CA to sign a more diverse range of certificates.
# See the POLICY FORMAT section of the ca man page.
countryName             = optional
stateOrProvinceName     = optional
localityName            = optional
organizationName        = optional
organizationalUnitName  = optional
commonName              = supplied
emailAddress            = optional

[ req ]
# Options for the req tool (man req).
default_bits        = 4096
distinguished_name  = req_distinguished_name
string_mask         = utf8only

# SHA-1 is deprecated, so use SHA-2 instead.
default_md          = sha384

# Extension to add when the -x509 option is used.
x509_extensions     = v3_ca

[ req_distinguished_name ]
# See <https://en.wikipedia.org/wiki/Certificate_signing_request>.
countryName                     = Country Name (2 letter code)
stateOrProvinceName             = State or Province Name
localityName                    = Locality Name
organizationName                = Organization Name
organizationalUnitName          = Organizational Unit Name
commonName                      = Common Name
emailAddress                    = Email Address

# Optionally, specify some defaults.
countryName_default             = __COUNTRY__
stateOrProvinceName_default     = __STATE__
localityName_default            = __LOCALITY__
organizationName_default        = __ORGANIZATION__
organizationalUnitName_default  = __ORG_UNIT__
emailAddress_default            = __EMAIL__

[ v3_ca ]
# Extensions for a typical CA (man x509v3_config).
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints = critical, CA:true
keyUsage = critical, digitalSignature, cRLSign, keyCertSign

[ v3_intermediate_ca ]
# Extensions for a typical intermediate CA (man x509v3_config).
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints = critical, CA:true, pathlen:1
keyUsage = critical, digitalSignature, cRLSign, keyCertSign
nsComment = "OpenSSL Generated Intermediate CA Request"

crlDistributionPoints = @crl_info
authorityInfoAccess = @ocsp_info

[crl_info]
URI.0 = http://crl.example.com/__CA__/revoked.crl

[ocsp_info]
caIssuers;URI.0 = http://ocsp.example.com/__CA__.crt
OCSP;URI.0 = http://ocsp.example.com/

[ user_cert ]
# Extensions for client certificates (man x509v3_config).
basicConstraints = CA:FALSE
nsCertType = client, email
nsComment = "OpenSSL Generated Client Certificate"
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer
keyUsage = critical, nonRepudiation, digitalSignature, keyEncipherment
extendedKeyUsage = clientAuth, emailProtection

[ server_cert ]
# Extensions for server certificates (man x509v3_config).
basicConstraints = CA:FALSE
nsCertType = server
nsComment = "OpenSSL Generated Server Certificate"
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer:always
keyUsage = critical, digitalSignature, keyEncipherment
extendedKeyUsage = serverAuth
crlDistributionPoints = @crl_info
authorityInfoAccess = @ocsp_info
#subjectAltName = @alt_names

#[alt_names]
# Dummy alt name, real Alternative name must be specified in CSR

[ crl_ext ]
# Extension for CRLs (man x509v3_config).
authorityKeyIdentifier=keyid:always

[ ocsp ]
# Extension for OCSP signing certificates (man ocsp).
basicConstraints = CA:FALSE
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid,issuer
keyUsage = critical, digitalSignature
extendedKeyUsage = critical, OCSPSigning
